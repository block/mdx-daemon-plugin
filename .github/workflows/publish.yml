# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Publish Plugin

on:
  push:
    tags:
      - 'v*.*.*'   # e.g., v0.0.2
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && github.repository == 'block/mdx-daemon-plugin'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (17)
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Extract version from Gradle
        id: version
        run: |
          V=$(./gradlew -q properties | awk -F': ' '/^version:/ {print $2; exit}')
          echo "version=$V" >> "$GITHUB_OUTPUT"

      - name: Validate tag matches version (strip leading 'v')
        run: |
          TAG="${{ github.ref_name }}"         # e.g., v0.0.2
          [[ "$TAG" == v* ]] && TAG="${TAG:1}" # -> 0.0.2
          if [[ "$TAG" != "${{ steps.version.outputs.version }}" ]]; then
            echo "Tag '$TAG' does not match version '${{ steps.version.outputs.version }}'"; exit 1
          fi

      - name: Build Plugin ZIP
        run: ./gradlew buildPlugin -s

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}            # use the pushed tag (e.g., v0.0.2)
          release_name: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Plugin ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/mdxdaemon-ide-plugin-${{ steps.version.outputs.version }}.zip
          asset_name: mdxdaemon-ide-plugin-${{ steps.version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Publish to JetBrains Marketplace
        run: ./gradlew publishPlugin -s
        env:
          JETBRAINS_TOKEN: ${{ secrets.JETBRAINS_MARKETPLACE_SQUARE_PLUGINS }}
