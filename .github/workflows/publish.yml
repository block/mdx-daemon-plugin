# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Publish Plugin

on:
  push:
    tags:
        - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.repository == 'block/mdx-daemon-plugin'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4

      - name: Extract version
        id: version
        run: |
          if grep -q '^version=' gradle.properties; then
            V=$(grep '^version=' gradle.properties | cut -d= -f2)
          else
            V=$(grep -oPm1 "(?<=<version>)[^<]+" src/main/resources/META-INF/plugin.xml)
          fi
          echo "version=$V" >> $GITHUB_OUTPUT

      - name: Validate tag
        run: |
          if [[ "${{ github.ref_name }}" != "${{ steps.version.outputs.version }}" ]]; then
            echo "Tag does not match version ${{ steps.version.outputs.version }}"; exit 1
          fi

      - name: Build Plugin ZIP
        run: ./gradlew buildPlugin -s

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Plugin ZIP
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/mdxdaemon-ide-plugin-${{ steps.version.outputs.version }}.zip
          asset_name: mxddaemon-ide-plugin-${{ steps.version.outputs.version }}.zip
          asset_content_type: 'application/zip'

      - name: Publish to JetBrains Marketplace
        run: ./gradlew publishPlugin -s
        env:
          JETBRAINS_TOKEN: ${{ secrets.JETBRAINS_MARKETPLACE_SQUARE_PLUGINS }}
